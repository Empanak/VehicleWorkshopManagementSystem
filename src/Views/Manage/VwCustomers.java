package Views.Manage;

import Connection.Connect;
import Controller.CtrlCustomer;
import Entities.Customer;
import Entities.User;
import Models.CustomTableCellRenderer;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

public class VwCustomers extends javax.swing.JPanel {

    private User currentUser;
    private DefaultTableModel model = new DefaultTableModel();
    private int filaSeleccionada, idCliente;
    private boolean is_selected = false;
    
    public VwCustomers(User currentUser) {
        this.currentUser = currentUser;
        initComponents();
        
        MaskFormatter phoneFormatter = null;
        try {
            phoneFormatter = new MaskFormatter("###-###-####");
            phoneFormatter.setPlaceholderCharacter('_'); // Carácter de relleno opcional
        } catch (java.text.ParseException e) {
            e.printStackTrace();
        }
        txtFrmPhone.setFormatterFactory(new DefaultFormatterFactory(phoneFormatter));

        setName("Customers");
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Apellido Paterno");
        model.addColumn("Apellido Materno");
        model.addColumn("Telefono");
        tbCustomers.setModel(model);
        scpCustomers.setViewportView(tbCustomers);
        tbCustomers.addMouseListener(new MouseAdapter(){ // Asignar evento de mouse a la tabla de usuarios para seleccionar una fila
            @Override
            public void mouseClicked(MouseEvent e){ // Evento de mouse cuando es clickeada la tabla
                btnEditarValores.setEnabled(true); // Habilitar el boton de editar valores
                btnDelete.setEnabled(true); // Habilitar el boton de actualizar
                filaSeleccionada = tbCustomers.rowAtPoint(e.getPoint()); // Obtener la fila seleccionada
                btnEditarValores.setSelected(false); // Deshabilitar el boton de editar valores
                btnEditarValores.setText("Editar valores"); // Cambiar el texto del boton de editar valores
                txtName.setEnabled(false); // Deshabilitar el campo de nombre
                txtLastNamePat.setEnabled(false); // Deshabilitar el campo de apellido
                txtLastNameMat.setEnabled(false); // Deshabilitar el campo de e-mail
                txtFrmPhone.setEnabled(false);
                btnUpdate.setEnabled(false); // Deshabilitar el boton de actualizar
                loadFields(filaSeleccionada); // Cargar los campos con los datos de la fila seleccionada
            }
        });
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scpCustomers = new javax.swing.JScrollPane();
        tbCustomers = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            };
        };
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEditarValores = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtLastNameMat = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtLastNamePat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labIDSelec = new javax.swing.JLabel();
        txtFrmPhone = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(65, 80, 87));

        tbCustomers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbCustomers.getTableHeader().setReorderingAllowed(false);
        tbCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCustomers.setMaximumSize(new java.awt.Dimension(80, 80));
        scpCustomers.setViewportView(tbCustomers);

        jPanel3.setBackground(new java.awt.Color(65, 80, 87));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(500, 230));

        btnUpdate.setBackground(new java.awt.Color(0, 255, 0));
        btnUpdate.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnUpdate.setText("Actualizar");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 102));
        btnDelete.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Borrar Registro");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEditarValores.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnEditarValores.setText("Editar valores");
        btnEditarValores.setEnabled(false);
        btnEditarValores.putClientProperty("Button.arc", 999);
        btnEditarValores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarValoresMouseClicked(evt);
            }
        });
        btnEditarValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarValoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarValores, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEditarValores, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jLabel4.setText("Nombre:");

        txtName.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        txtName.setEnabled(false);
        txtName.setPreferredSize(new java.awt.Dimension(150, 28));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        txtLastNameMat.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        txtLastNameMat.setEnabled(false);
        txtLastNameMat.setPreferredSize(new java.awt.Dimension(150, 28));
        txtLastNameMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastNameMatKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jLabel5.setText("Apellido Paterno:");

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jLabel7.setText("Teléfono:");

        txtLastNamePat.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        txtLastNamePat.setEnabled(false);
        txtLastNamePat.setPreferredSize(new java.awt.Dimension(150, 28));
        txtLastNamePat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastNamePatKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jLabel6.setText("Apellido Materno:");

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jLabel1.setText("ID seleccionado:");

        labIDSelec.setFont(new java.awt.Font("Bahnschrift", 1, 15)); // NOI18N
        labIDSelec.setText("-");

        txtFrmPhone.setEnabled(false);
        txtFrmPhone.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        txtFrmPhone.setPreferredSize(new java.awt.Dimension(64, 28));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFrmPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLastNameMat, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labIDSelec))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLastNamePat, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labIDSelec))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtLastNamePat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLastNameMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtFrmPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        jPanel4.setBackground(new java.awt.Color(65, 80, 87));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setPreferredSize(new java.awt.Dimension(500, 230));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
            .addComponent(scpCustomers)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(scpCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarValoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarValoresMouseClicked
        if(btnEditarValores.isSelected()){ //si esta seleccionado el boton
            if(is_selected){ //si hay una fila seleccionada
                txtName.setEnabled(true); //habilitar el campo de nombre
                txtLastNamePat.setEnabled(true); //habilitar el campo de apellido
                txtLastNameMat.setEnabled(true); //habilitar el campo de e-mail
                txtFrmPhone.setEnabled(true);
                btnUpdate.setEnabled(true); //habilitar el boton de actualizar
                btnEditarValores.setText("Cancelar edición"); //cambiar el texto del boton
            }
        }else{
            if(is_selected){ //si hay una fila seleccionada
                txtName.setEnabled(false); //habilitar el campo de nombre
                txtLastNamePat.setEnabled(false); //habilitar el campo de apellido
                txtLastNameMat.setEnabled(false); //habilitar el campo de e-mail
                txtFrmPhone.setEnabled(false);
                btnUpdate.setEnabled(false); //habilitar el boton de actualizar
                loadFields(filaSeleccionada); //cargar los campos
                btnEditarValores.setText("Editar valores"); //cambiar el texto del boton
            }
        }
    }//GEN-LAST:event_btnEditarValoresMouseClicked

    private void btnEditarValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarValoresActionPerformed
        if(btnEditarValores.isSelected()){ //si esta seleccionado el boton
            if(is_selected){ //si hay una fila seleccionada
                txtName.setEnabled(true); //habilitar el campo de nombre
                txtLastNamePat.setEnabled(true); //habilitar el campo de apellido
                txtLastNameMat.setEnabled(true); //habilitar el campo de e-mail
                txtFrmPhone.setEnabled(true);
                btnUpdate.setEnabled(true); //habilitar el boton de actualizar
                btnEditarValores.setText("Cancelar edición"); //cambiar el texto del boton
            }
        }else{
            if(is_selected){ //si hay una fila seleccionada
                txtName.setEnabled(false); //habilitar el campo de nombre
                txtLastNamePat.setEnabled(false); //habilitar el campo de apellido
                txtLastNameMat.setEnabled(false); //habilitar el campo de e-mail
                txtFrmPhone.setEnabled(false);
                btnUpdate.setEnabled(false); //habilitar el boton de actualizar
                loadFields(filaSeleccionada); //cargar los campos
                btnEditarValores.setText("Editar valores"); //cambiar el texto del boton
            }
        }
    }//GEN-LAST:event_btnEditarValoresActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        CtrlCustomer ctrlCustomer = new CtrlCustomer();
        if(!isFilled()){
            JOptionPane.showMessageDialog(null, "Llena todos los campos", "Campos incompletos", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String name = txtName.getText(),
        lNamePat = txtLastNamePat.getText(),
        lNameMat = txtLastNameMat.getText(),
        phone = txtFrmPhone.getText().replace("-", "");
        Customer customer = new Customer(idCliente, name, lNamePat, lNameMat, phone);

        if(ctrlCustomer.update(customer, currentUser)){
            btnDelete.setEnabled(true);
            btnEditarValores.setEnabled(false);
            btnEditarValores.setText("Editar valores");
            txtName.setEnabled(false);
            txtLastNamePat.setEnabled(false);
            txtLastNameMat.setEnabled(false);
            txtFrmPhone.setEnabled(false);
            btnUpdate.setEnabled(false);
            loadTable();
            JOptionPane.showMessageDialog(null, "Actalización exitosa"); //Muestra un mensaje de completado
        }else
        JOptionPane.showMessageDialog(null, "Error al actualizar el registro seleccionado", "Fallo de actualización", JOptionPane.ERROR_MESSAGE); //Muestra un mensaje de error

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        CtrlCustomer ctrlCustomer = new CtrlCustomer();
        if(is_selected){
            if(JOptionPane.YES_OPTION ==JOptionPane.showConfirmDialog(
                null,
                "Desea eliminar el registro seleccionado?\n(Esta acción no se puede deshacer)",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE)) //Muestra un mensaje de confirmacion para eliminar
            if(ctrlCustomer.delete(new Customer(idCliente), currentUser)){ //Elimina el registro en la base de datos
                loadTable(); //Carga la tabla de conductores
                JOptionPane.showMessageDialog(null, "Registro eliminado correctamente"); //Muestra un mensaje de completado
            }else{ //Si no se elimino
                JOptionPane.showMessageDialog(null, "Error al eliminar el registro seleccionado","Fallo de eliminación", JOptionPane.ERROR_MESSAGE); //Muestra un mensaje de error
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        char keyChar = evt.getKeyChar();
        int longitudCadena = txtName.getText().length();
        if (!(Character.isAlphabetic(keyChar) || keyChar == ' ')){
            evt.consume();
        }else{
            if(longitudCadena == 0 && keyChar == ' ')
                evt.consume();
            if(longitudCadena >= 1){
                if(keyChar == ' ' && txtName.getText().charAt(longitudCadena - 1) == ' '){
                    evt.consume();
                }
                if(Character.isUpperCase(keyChar) && Character.isUpperCase(txtName.getText().charAt(longitudCadena - 1))){
                    evt.consume();
                }
            }
        }
        if(txtName.getText().length() >= 25)
            evt.consume();
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtLastNamePatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNamePatKeyTyped
        char keyChar = evt.getKeyChar();
        int longitudCadena = txtLastNamePat.getText().length();
        if (!(Character.isAlphabetic(keyChar) || keyChar == ' ')){
            evt.consume();
        }else{
            if(longitudCadena == 0 && keyChar == ' ')
                evt.consume();
            if(longitudCadena >= 1){
                if(keyChar == ' ' && txtLastNamePat.getText().charAt(longitudCadena - 1) == ' '){
                    evt.consume();
                }
                if(Character.isUpperCase(keyChar) && Character.isUpperCase(txtLastNamePat.getText().charAt(longitudCadena - 1))){
                    evt.consume();
                }
            }
        }
        if(txtLastNamePat.getText().length() >= 20)
            evt.consume();
    }//GEN-LAST:event_txtLastNamePatKeyTyped

    private void txtLastNameMatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameMatKeyTyped
        char keyChar = evt.getKeyChar();
        int longitudCadena = txtLastNameMat.getText().length();
        if (!(Character.isAlphabetic(keyChar) || keyChar == ' ')){
            evt.consume();
        }else{
            if(longitudCadena == 0 && keyChar == ' ')
                evt.consume();
            if(longitudCadena >= 1){
                if(keyChar == ' ' && txtLastNameMat.getText().charAt(longitudCadena - 1) == ' '){
                    evt.consume();
                }
                if(Character.isUpperCase(keyChar) && Character.isUpperCase(txtLastNameMat.getText().charAt(longitudCadena - 1))){
                    evt.consume();
                }
            }
        }
        if(txtLastNameMat.getText().length() >= 20)
            evt.consume();
    }//GEN-LAST:event_txtLastNameMatKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JToggleButton btnEditarValores;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel labIDSelec;
    private javax.swing.JScrollPane scpCustomers;
    private javax.swing.JTable tbCustomers;
    private javax.swing.JFormattedTextField txtFrmPhone;
    private javax.swing.JTextField txtLastNameMat;
    private javax.swing.JTextField txtLastNamePat;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
private void loadTable(){
    Connection cn = Connect.connect(currentUser);
    String query = "SELECT cliente_id, cliente_nombre, cliente_apellido_paterno, cliente_apellido_materno, cliente_telefono FROM cliente"; //Query para cargar la tabla de autobuses
        try(PreparedStatement st = cn.prepareStatement(query)){ //Prepara la sentencia
            ResultSet rs = st.executeQuery(); //Ejecuta la sentencia
            while(model.getRowCount()>0){ //Elimina todas las filas de la tabla
                model.removeRow(0); //Elimina la fila 
            }

            while(rs.next()){ //Recorre el resultado
                Object fila[] = new Object[5]; //Crea un arreglo de objetos
                for(byte i = 0; i < 5; i++){ //Recorre el arreglo
                    fila[i] = rs.getObject(i+1); //Asigna el valor correspondiente
                } 
                model.addRow(fila); //Agrega la fila al modelo
            }
            st.close(); //Cierra la sentencia
            cn.close(); //Cierra la base de datos
        }catch(SQLException e){ //Si hay un error
            System.out.println("Carga de datos fallida " + e); //Imprime un mensaje de error
        }
        for (int i = 0; i < tbCustomers.getColumnCount(); i++) {
            tbCustomers.getColumnModel().getColumn(i).setHeaderRenderer(new CustomTableCellRenderer());
        }
        tbCustomers.setDefaultRenderer(java.lang.Object.class, new CustomTableCellRenderer());
        is_selected = false;
}

private void loadFields(int fila){
    if(fila > -1){ 
            is_selected = true; //Habilita la seleccion
            btnEditarValores.setEnabled(true);
            idCliente = (int) model.getValueAt(fila, 0); //Obtiene el id del usuario
            labIDSelec.setText(String.valueOf(idCliente));
            txtName.setText((String) model.getValueAt(fila, 1)); //Obtiene el nombre
            txtLastNamePat.setText((String)model.getValueAt(fila, 2)); //Obtiene el apellido
            txtLastNameMat.setText((String)model.getValueAt(fila, 3)); //Obtiene el email
            txtFrmPhone.setText((String)model.getValueAt(fila, 4));
        }
}

private boolean isFilled(){
    if(txtName.getText().isEmpty()||
        txtLastNamePat.getText().isEmpty()||
        txtLastNameMat.getText().isEmpty()||
        txtFrmPhone.getText().replace("-", "").replace(" ", "").replace("_", "").isEmpty()){
            return false;
        }else{
            return true;
        }
}

}
